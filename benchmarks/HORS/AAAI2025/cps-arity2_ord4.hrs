%BEGING
S -> Forall52 ZeroBBB.
Forall52 f -> and (S51 f) (if (IsMaxBBB f) tt (Forall52 (SuccBBB f))).
S51 f -> Exists50 f ZeroBLLBBRBRB.
Exists50 f g -> or (S49 f g) (if (IsMaxBLLBBRBRB g) ff (Exists50 f (SuccBLLBBRBRB g))).
S49 f g -> and (S48 f g tt) (S48 f g ff).
S48 f g x -> and (S47 f g x tt) (S47 f g x ff).
S47 f g x y -> Exists46 f g x y ZeroLBBRB.
Exists46 f g x y k -> or (S45 f g x y k) (if (IsMaxLBBRB k) ff (Exists46 f g x y (SuccLBBRB k))).
S45 f g x y k -> and (Forall44 f g x y k ZeroBB) (iff (f x y) (g x k)).
Forall44 f g x y k h -> and (S43 f g x y k h) (if (IsMaxBB h) tt (Forall44 f g x y k (SuccBB h))).
S43 f g x y k h -> iff (k h) (h y).
ZeroLLBBRBRB x1 -> ff.
IsMaxLLBBRBRB x -> IsMaxRecLLBBRBRB x ZeroLBBRB.
SuccLLBBRBRB x x1 -> FindLLBBRBRB x ZeroLBBRB x1.
CompareLLBBRBRB x y z lt eq gt -> if (IsMaxLBBRB z) eq (CompareLLBBRBRB x y (SuccLBBRB z) lt (CompareB (x z) (y z) lt eq gt) gt).
IsMaxRecLLBBRBRB x y -> and (IsMaxB (x y)) (if (IsMaxLBBRB y) tt (IsMaxRecLLBBRBRB x (SuccLBBRB y))).
FindLLBBRBRB x y x1 -> if (IsMaxB (x y)) (if (IsMaxLBBRB y) ZeroB (FindLLBBRBRB x (SuccLBBRB y) x1)) (CarryLLBBRBRB x y x1).
CarryLLBBRBRB x y x1 -> CompareLBBRB y x1 ZeroBB (x x1) (SuccB (x x1)) ZeroB.
ZeroLBBRB x1 -> ff.
IsMaxLBBRB x -> IsMaxRecLBBRB x ZeroBB.
SuccLBBRB x x1 -> FindLBBRB x ZeroBB x1.
CompareLBBRB x y z lt eq gt -> if (IsMaxBB z) eq (CompareLBBRB x y (SuccBB z) lt (CompareB (x z) (y z) lt eq gt) gt).
IsMaxRecLBBRB x y -> and (IsMaxB (x y)) (if (IsMaxBB y) tt (IsMaxRecLBBRB x (SuccBB y))).
FindLBBRB x y x1 -> if (IsMaxB (x y)) (if (IsMaxBB y) ZeroB (FindLBBRB x (SuccBB y) x1)) (CarryLBBRB x y x1).
CarryLBBRB x y x1 -> CompareBB y x1 ZeroB (x x1) (SuccB (x x1)) ZeroB.
ZeroBLLBBRBRB x1 x2 -> ff.
IsMaxBLLBBRBRB x -> and (IsMaxLLBBRBRB (x tt)) (IsMaxLLBBRBRB (x ff)).
SuccBLLBBRBRB x x1 x2 -> if (IsMaxLLBBRBRB (x ff)) (if x1 (SuccLLBBRBRB (x x1) x2) (ZeroLLBBRBRB x2)) (if x1 (x x1 x2) (SuccLLBBRBRB (x x1) x2)).
CompareBLLBBRBRB x y z lt eq gt -> if (IsMaxB z) eq (CompareBLLBBRBRB x y (SuccB z) lt (CompareLLBBRBRB (x z) (y z) ZeroLBBRB lt eq gt) gt).
ZeroBBB x1 x2 -> ff.
IsMaxBBB x -> and (IsMaxBB (x tt)) (IsMaxBB (x ff)).
SuccBBB x x1 x2 -> if (IsMaxBB (x ff)) (if x1 (SuccBB (x x1) x2) (ZeroBB x2)) (if x1 (x x1 x2) (SuccBB (x x1) x2)).
CompareBBB x y z lt eq gt -> if (IsMaxB z) eq (CompareBBB x y (SuccB z) lt (CompareBB (x z) (y z) ZeroB lt eq gt) gt).
ZeroBB x1 -> ff.
IsMaxBB x -> and (IsMaxB (x tt)) (IsMaxB (x ff)).
SuccBB x x1 -> if (IsMaxB (x ff)) (if x1 (SuccB (x x1)) ZeroB) (if x1 (x x1) (SuccB (x x1))).
CompareBB x y z lt eq gt -> if (IsMaxB z) eq (CompareBB x y (SuccB z) lt (CompareB (x z) (y z) lt eq gt) gt).
ZeroB -> ff.
IsMaxB x -> x.
SuccB x -> tt.
CompareB x y lt eq gt -> if x (if y eq gt) (if y lt eq).
%ENDG

%BEGINR
tt -> 0.
ff -> 0.
not -> 1.
and -> 2.
or -> 2.
imply -> 2.
iff -> 2.
xor -> 2.
if -> 3.
%ENDR

%BEGINATA
qT tt -> true.
qT ff -> false.
qT not -> (1,qF).
qT and -> (1,qT) /\ (2,qT).
qT or -> (1,qT) \/ (2,qT).
qT imply -> (1,qF) \/ (2,qT).
qT iff -> (1,qT) /\ (2,qT) \/ (1,qF) /\ (2,qF).
qT xor -> (1,qT) /\ (2,qF) \/ (1,qF) /\ (2,qT).
qT if -> (1,qT) /\ (2,qT) \/ (1,qF) /\ (3,qT).
qF tt -> false.
qF ff -> true.
qF not -> (1,qT).
qF and -> (1,qF) \/ (2,qF).
qF or -> (1,qF) /\ (2,qF).
qF imply -> (1,qT) /\ (2,qF).
qF iff -> (1,qT) /\ (2,qF) \/ (1,qF) /\ (2,qT).
qF xor -> (1,qT) /\ (2,qT) \/ (1,qF) /\ (2,qF).
qF if -> (1,qT) /\ (2,qF) \/ (1,qF) /\ (3,qF).
%ENDATA

